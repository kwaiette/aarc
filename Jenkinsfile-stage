#!/usr/bin/env groovy
pipeline {
    agent {
        dockerfile {
            filename "docker/jenkins/Dockerfile"
            args "--entrypoint=''"
        }
    }
    environment {
        LC_ALL='en_US.UTF-8'
        LANG='en_US.UTF-8'
    }
    stages {
        stage('Build Backend') {
            steps {
                sh "cd backend && npm i"
                sh 'sleep 10s'
            }
        }
        stage('Build Frontend') {
            steps {
                sh "cd frontend && npm i"
                sh 'sleep 10s'
            }
        }
        stage('Test') {
            steps {
                echo "Run tests"
                //FIXME
                sh 'sleep 10s'
            }
        }
        stage('Deploy') {
            steps {
                echo 'Deploying... '
		echo 'Packaging backend... '
                sh "cd backend && tar -czf backend.tar.gz --files-from includesfile-be && mv backend.tar.gz .."
                sh "scp -o StrictHostKeyChecking=no -i /home/.ssh/rigel-alpha.pem backend.tar.gz ec2-user@stage.developerlevel.com:/home/ec2-user/src/aarc/docker/production/"
		echo 'Packaging frontend... '
                sh "cd frontend && tar -czf frontend.tar.gz --files-from includesfile-fe && mv frontend.tar.gz .."
                sh "scp -o StrictHostKeyChecking=no -i /home/.ssh/rigel-alpha.pem frontend.tar.gz ec2-user@stage.developerlevel.com:/home/ec2-user/src/aarc/docker/production/"
                sh "ssh -o StrictHostKeyChecking=no -i /home/.ssh/rigel-alpha.pem ec2-user@stage.developerlevel.com /home/ec2-user/src/aarc/docker-build.sh"
            }
        }
    }
}
